---
layout: pagebase
---
@using Pretzel.SethExtensions;
@using WebsitePlugin;
@{
    ClockBotInfo botInfo = Model.Page.ToClockBotInfo( Model.Site );
}
<article id="maincontents">
     <header>
        @if( botInfo.get_IconPath() != null )
        {
            <div class="lead-image">
                <img class="img-responsive" src="@botInfo.get_IconPath().LocalPath" alt="Clock Tower Image"/>
            </div>
            @if( string.IsNullOrWhiteSpace( botInfo.get_ImageCredit() ) == false )
            {
                <div>
                    <strong>Image Credit: </strong>
                    @botInfo.get_ImageCredit()
                </div>
            }
        }
    </header>
    <div class="body">
        <div id="pagecontents">
            <h1>@Model.Page.Title</h1>

            <div>
                <strong>Webfinger: </strong>@@@botInfo.get_WebFinger()
            </div>

            @if( string.IsNullOrWhiteSpace( Model.Content ) == false )
            {
                <h2>About</h2>
                @Raw( Model.Content )
            }
            <h2>How to follow</h2>
            <div>
                <p>
                    Open your ActivityPub supported application (such as Mastodon)
                    and search for the following webfinger string:
                </p>
                <p>
                    @@@botInfo.get_WebFinger()
                </p>
            </div>

            <h2>Metadata</h2>
            <ul>
                @if( botInfo.get_Location() != null )
                {
                    <li>
                        <strong>Location: </strong>
                        @botInfo.get_Location()
                    </li>
                }
                @if(
                    ( botInfo.get_Latitude() != null ) &&
                    ( botInfo.get_Longitude() != null )
                )
                {
                    <li>
                        <strong>Coordinates: </strong>
                        @(botInfo.get_Latitude()), @(botInfo.get_Longitude())
                    </li>       
                }
                @if( botInfo.get_TimeZone() != null )
                {
                    <li>
                        <strong>Timezone: </strong>
                        @botInfo.get_TimeZone()
                    </li>
                }
                @if( botInfo.get_Website() != null )
                {
                    <li>
                        <strong>Website: </strong>
                        <a href="@botInfo.get_Website()" @Raw( @SethHtmlFormatter.ATagProperties )>
                            @botInfo.get_Website()
                        </a>
                    </li>
                }
                @if( botInfo.get_Wikipedia() != null )
                {
                    <li>
                        <strong>Wikipedia: </strong>
                        <a href="@botInfo.get_Wikipedia()" @Raw( @SethHtmlFormatter.ATagProperties )>
                            @botInfo.get_Wikipedia()
                        </a>
                    </li>
                }
                @if( botInfo.get_GitHub() != null )
                {
                    <li>
                        <strong>Bot Source Code: </strong>
                        <a href="@botInfo.get_GitHub()" @Raw( @SethHtmlFormatter.ATagProperties )>
                            @botInfo.get_GitHub()
                        </a>
                    </li>
                }
            </ul>

            @if(
                ( botInfo.get_Latitude() != null ) &&
                ( botInfo.get_Longitude() != null )
            )
            {
                <h2>Location</h2>
                <div>
                    <noscript>JavaScript Required to make a map.</noscript>
                    <div id="mapid" style="width: 100%;height: 500px;"></div>
                </div>  
            }
        </div>
    </div>
</article>

@if(
    ( botInfo.get_Latitude() != null ) &&
    ( botInfo.get_Longitude() != null )
)
{
    <script src="/static/js/leaflet.js"></script>
    <script>
        // Create Map.
        var map = L.map('mapid').setView([@(botInfo.get_Latitude()), @(botInfo.get_Longitude())], 10);

        // Pull from OSM API
        var osmURL = "http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png";

        // In order to use open street map, we need to attribute to it.
        var osmAttrib = 'Map Data &copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap</a> contributors';

        // Create the OSM layer.
        var osm = new L.TileLayer( osmURL, { minZoom: 0, maxZoom: 18, attribution: osmAttrib});

        // Add the osm layer to the map
        map.addLayer(osm);

        // Create Icon
        var centerIcon = L.icon({
            iconUrl: "/static/img/leaflet/marker-icon.png",
            iconSize: [25, 41],
            iconAnchor:[12.5, 41],
            popupAnchor:[0, -30]
        });

        var marker = L.marker([@(botInfo.get_Latitude()), @(botInfo.get_Longitude())])
                        .setIcon(centerIcon)
                        .addTo(map);
    </script>
}